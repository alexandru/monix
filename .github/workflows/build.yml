name: build

on: [ push, pull_request ]

jobs:
  
  jvm-tests:
    name: JVM - scala-${{ matrix.scala }} jdk-${{ matrix.java }}
    runs-on: ubuntu-latest
    strategy:
      # fail-fast: true
      matrix:
        java: [ 8, 11 ]
        scala: [ 2.11.12, 2.12.12, 2.13.3 ]

    steps:
      - uses: actions/checkout@v2
      - uses: olafurpg/setup-scala@v7
        with:
          java-version: "adopt@1.${{ matrix.java }}"
          
      - name: Cache sbt Coursier directory
        uses: actions/cache@v1
        with:
          path: ~/.cache/coursier/v1
          key: ${{ runner.os }}-coursier-${{ hashFiles('**/*.sbt') }}
          restore-keys: |
            ${{ runner.os }}-coursier-
      
      - name: Cache sbt directory
        uses: actions/cache@v1
        with:
          path: ~/.sbt
          key: |
            ${{ runner.os }}-sbt-${{ hashFiles('project/build.properties') }}-${{ hashFiles('project/plugins.sbt') }}
          restore-keys: ${{ runner.os }}-sbt-
          
      - name: sbt ci-jvm
        run: |
          ./.github/scripts/build
        env:
          SCALA_VERSION: ${{ matrix.scala }}
          PLATFORM: ${{ matrix.java }}
          SBT_COMMAND: ci-jvm
              
  js-tests:
    name: JS - scala-${{ matrix.scala }} js-${{ matrix.scalajs }} jdk-${{ matrix.java }}
    runs-on: ubuntu-latest
    strategy:
      # fail-fast: true
      matrix:
        include:
          - { java: 8, scala: 2.11.12, scalajs: 0.6.33 }
          - { java: 8, scala: 2.12.12, scalajs: 0.6.33 }
          - { java: 8, scala: 2.12.12, scalajs:  1.1.1 }
          - { java: 8, scala:  2.13.3, scalajs: 0.6.33 }
          - { java: 8, scala:  2.13.3, scalajs:  1.1.1 }
    
    steps:
      - uses: actions/checkout@v2
      - uses: olafurpg/setup-scala@v7
        with:
          java-version: "adopt@1.${{ matrix.java }}"
          
      - name: Cache sbt Coursier directory
        uses: actions/cache@v1
        with:
          path: ~/.cache/coursier/v1
          key: ${{ runner.os }}-coursier-${{ hashFiles('**/*.sbt') }}
          restore-keys: |
            ${{ runner.os }}-coursier-
      
      - name: Cache sbt directory
        uses: actions/cache@v1
        with:
          path: ~/.sbt
          key: |
            ${{ runner.os }}-sbt-${{ hashFiles('project/build.properties') }}-${{ hashFiles('project/plugins.sbt') }}
          restore-keys: ${{ runner.os }}-sbt-
          
      - name: sbt ci-js
        run: |
          ./.github/scripts/build
        env:
          SCALA_VERSION: ${{ matrix.scala }}
          SCALAJS_VERSION: ${{ matrix.scalaJS }}
          PLATFORM: ${{ matrix.java }}
          SBT_COMMAND: ci-js
  
  mima:
    name: Mima
    runs-on: ubuntu-latest
    strategy:
      # fail-fast: true
      matrix:
        include:
          - { java: 8, scala: 2.11.12, scalajs: 0.6.33 }
          - { java: 8, scala: 2.12.12, scalajs:  1.1.1 }
          - { java: 8, scala:  2.13.3, scalajs:  1.1.1 }

    steps:
      - uses: actions/checkout@v2
      - uses: olafurpg/setup-scala@v7
        with:
          java-version: "adopt@1.${{ matrix.java }}"
     
      - name: sbt mimaReportBinaryIssues
        run: |
          ./.github/scripts/build
        env:
          SCALA_VERSION: ${{ matrix.scala }}
          SCALAJS_VERSION: ${{ matrix.scalaJS }}
          SBT_COMMAND: mimaReportBinaryIssues
      
  unidoc:
    name: Unidoc
    runs-on: ubuntu-latest
    strategy:
      # fail-fast: true
      matrix:
        include:
          - { java: 8, scala: 2.13.3, scalajs: 1.1.1 }

    steps:
      - uses: actions/checkout@v2
      - uses: olafurpg/setup-scala@v7
        with:
          java-version: "adopt@1.${{ matrix.java }}"
     
      - name: sbt unidoc
        run: |
          ./.github/scripts/build
        env:
          SCALA_VERSION: ${{ matrix.scala }}
          SCALAJS_VERSION: ${{ matrix.scalaJS }}
          SBT_COMMAND: unidoc
      
  publish:
    needs: [ jvm-tests, js-tests, mima, unidoc ]
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: olafurpg/setup-scala@v2
      - uses: olafurpg/setup-gpg@v2
      - name: Publish ${{ github.ref }}
        run: sbt ci-release
        env:
          PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
          PGP_SECRET: ${{ secrets.PGP_SECRET }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
